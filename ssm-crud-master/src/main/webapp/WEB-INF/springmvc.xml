<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 配置Spring MVC包扫描器, Spring MVC只负责网站跳转逻辑这部分 -->
    <context:component-scan base-package="pers.oneice.ssm.crud" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--开启Spring MVC注解驱动, 支持基于注解的JSR303校验, 处理Ajax请求, 映射动态请求等
         validator: 将指定的校验器注册进WebDataBinder
         conversion-service: 将指定的ConversionService注册进HandlerAdapter
    -->
    <mvc:annotation-driven validator="validator" conversion-service="conversionService"/>

    <!-- 将静态资源(或没有一个控制器可以映射的请求)交给Tomcat的默认Servlet处理 -->
    <mvc:default-servlet-handler/>

    <!-- 配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 路径前缀 -->
        <property name="prefix" value="/WEB-INF/views/"/>
        <!-- 路径后缀 -->
        <property name="suffix" value=".jsp"/>
        <!-- 设置默认视图 -->
        <!-- 默认视图只会应用于不包含 "redirect:" 和 "forward:" 前缀的视图名 -->
        <!--        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
    </bean>

    <!-- 配置校验器 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- 使用hibernate校验器 -->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    </bean>

    <!--配置指定的ConversionService, 用于类型转换和数据格式化-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!--注册自定义的类型转换器-->
        <property name="converters">
            <set>
                <bean class="pers.oneice.ssm.crud.converter.StringToIntegerListConverter"/>
            </set>
        </property>
    </bean>


    <!-- 下面都是可选配置, 可根据个人需要进行配置 -->

    <!--
    path: 请求路径
    view-name: 视图名
    status-code: 状态码, 默认是200
    -->
    <!--    <mvc:view-controller path="/toLoginPage" view-name="login"/>-->

    <!-- 配置拦截器 -->
    <!--    <mvc:interceptors>-->
    <!--        &lt;!&ndash; 配置一个全局拦截器，拦截所有请求 &ndash;&gt;-->
    <!--        <bean class="com.controller.MyFirstInterceptor"/>-->
    <!--        &lt;!&ndash; 配置一个只拦截指定路径的拦截器 &ndash;&gt;-->
    <!--        <mvc:interceptor>-->
    <!--            &lt;!&ndash; 拦截器的作用路径 &ndash;&gt;-->
    <!--            <mvc:mapping path="/test01"/>-->
    <!--            &lt;!&ndash; 不需要拦截的路径 &ndash;&gt;-->
    <!--            <mvc:exclude-mapping path=""/>-->
    <!--            &lt;!&ndash; 定义<mvc:interceptor>元素中，表示匹配指定路径的请求才进行拦截 &ndash;&gt;-->
    <!--            <bean class="com.controller.MySecondInterceptor"/>-->
    <!--        </mvc:interceptor>-->
    <!--    </mvc:interceptors>-->

    <!--配置指定的ConversionService, 用于类型转换和数据格式化-->
    <!--    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
    <!--        &lt;!&ndash;注册自定义的类型转换器&ndash;&gt;-->
    <!--        <property name="converters">-->
    <!--            <set>-->
    <!--                <bean class="com.controller.MyStringToEmployeeConverter"/>-->
    <!--            </set>-->
    <!--        </property>-->
    <!--    </bean>-->

    <!-- 配置校验器 -->
    <!--    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
    <!--        &lt;!&ndash; 校验器，使用hibernate校验器 &ndash;&gt;-->
    <!--        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>-->
    <!--        &lt;!&ndash; 指定表示校验信息的资源文件，在文件中配置校验的错误信息，如果不指定则默认使用classpath下面的ValidationMessages.properties文件 &ndash;&gt;-->
    <!--        <property name="validationMessageSource" ref="messageSource"/>-->
    <!--    </bean>-->

    <!-- 配置国际化资源文件 -->
    <!--    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
    <!--        &lt;!&ndash; 资源文件名 &ndash;&gt;-->
    <!--        <property name="basenames">-->
    <!--            <list>-->
    <!--                <value>classpath:errors</value>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--        &lt;!&ndash; 资源文件编码格式 &ndash;&gt;-->
    <!--        <property name="defaultEncoding" value="utf-8"/>-->
    <!--        &lt;!&ndash; 对资源文件的缓存时间, 单位秒 &ndash;&gt;-->
    <!--        <property name="cacheSeconds" value="120"/>-->
    <!--    </bean>-->

    <!--配置multipart解析器, 用于解析文件上传请求-->
    <!--    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
    <!--        &lt;!&ndash;设置一个请求能上传的总大小&ndash;&gt;-->
    <!--        <property name="maxUploadSize" value="#{1024*1024*10}"/>-->
    <!--        &lt;!&ndash;设置上传的每个文件的最大大小&ndash;&gt;-->
    <!--        <property name="maxUploadSizePerFile" value="#{1024*1024}"/>-->
    <!--        &lt;!&ndash;设置上传内容能保留在内存中的最大大小 (字节), 超过这个大小将会被写入临时目录, 默认为10240&ndash;&gt;-->
    <!--        <property name="maxInMemorySize" value="10240"/>-->
    <!--        &lt;!&ndash;设置存储上传文件的临时目录 ( 默认为servlet容器的临时目录)&ndash;&gt;-->
    <!--        &lt;!&ndash;        <property name="uploadTempDir" value=""/>&ndash;&gt;-->
    <!--        &lt;!&ndash;设置解析请求用的编码&ndash;&gt;-->
    <!--        <property name="defaultEncoding" value="UTF-8"/>-->
    <!--    </bean>-->

    <!--合并其他Spring MVC配置文件-->
    <!--    <import resource="springmvc2.xml"/>-->

</beans>
